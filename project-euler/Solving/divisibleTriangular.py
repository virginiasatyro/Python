'''
Highly divisible triangular number 
Problem 12

	The sequence of triangle numbers is generated by adding the natural numbers.
	So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 7 = 28. The first ten
	terms would be:
	1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ... 
	
	Let us list the factors of the first seven triangle numbers:
	1 : 1 
	3 : 1, 3 
	6 : 1, 2, 3, 6 
	10: 1, 2, 5, 10 
	15: 1, 3, 5, 15 
	21: 1, 3, 7, 21 
	28: 1, 2, 4, 7, 14, 28 
	
	We can see that 28 is the first triangle number to have over five divisors.
	
	What is the value of the first triangle number to have over five hundred divisors?
'''

aux = True
triangleSeq = []
i = 1 
triangleNum = 0 
MAX_DIVISOR = 501 

def quantDivisors(num):
	divisors = []
	for i in range(num):
		i += 1 
		if num%i == 0: # Ã© um divisor 
			divisors.append(i)
	return len(divisors)

while aux == True:
	triangleNum = triangleNum + i 
	triangleSeq.append(triangleNum)
	i += 1 
	
	if quantDivisors(triangleNum) >= MAX_DIVISOR:
		aux = False
		break
	print(triangleSeq)
# print(triangleSeq)
